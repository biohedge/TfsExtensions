{
    "id": "511a5e02-cdfe-420d-96b5-a2251ddaf6fb",
    "name": "WaitForBuildToFinish",
    "friendlyName": "Wait For Build(s) to finish",
    "description": "This tasks will wait for builds that were triggered using the Trigger Build Task to finish. This Tasks requires that at least one TriggerBuildTask was run before and has set the storeVariable flag to true.",
    "helpMarkDown": "",
    "category": "Build",
	"visibility": [
		"Build"
		],
    "author": "Benjamin Huser",
	"version": {
		"Major": 1,
		"Minor": 3,
		"Patch": 0
	},
	"instanceNameFormat": "Waiting for Builds to finish",
    "groups": [
		{
			"name": "basicConfiguration",
			"displayName": "Configuration",
			"isExpanded": true
		},
		{
			"name": "authenticationOptions",
			"displayName": "Authentication",
			"isExpanded": true
		}
	],
	"inputs": [
		{
			"name":  "definitionIsInCurrentTeamProject",
			"type":  "boolean",
			"label":  "True if the build to be triggered is defined within the same team project as this build",
			"defaultValue":  true,
			"required":  true,
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "tfsServer",
			"type":  "string",
			"label":  "URL to TFS Server (including Collection and Team Project)",
			"defaultValue":  "",
			"required":  true,
			"visibleRule": "definitionIsInCurrentTeamProject = false",
			"helpMarkDown":  "The TFS Server the Build you want to trigger is located. Example: https://<YOURACCOUNT>.visualstudio.com/DefaultCollection/<TEAMPROJECT>",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "ignoreSslCertificateErrors",
			"type":  "boolean",
			"label":  "Ignore SSL Certificate Errors",
			"defaultValue":  false,
			"required":  true,
			"helpMarkDown":  "When enabled possible certificate errors (for example untrusted CA's) will be ignored",
			"groupName":  "basicConfiguration"
		},		
		{
			"name":  "waitForQueuedBuildsToFinishRefreshTime",
			"type":  "string",
			"label":  "Time (in seconds) to wait between checks for the build",
			"defaultValue":  60,
			"required":  true,
			"helpMarkDown":  "This value defines how often the tasks checks if the triggered builds are completed already",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "failTaskIfBuildsNotSuccessful",
			"type":  "boolean",
			"label":  "Fail the build if the tasks were not successful",
			"defaultValue":  true,
			"required":  true,
			"helpMarkDown":  "Fails this build if one of the triggered tasks was not successful",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "downloadBuildArtifacts",
			"type":  "boolean",
			"label":  "Download Build Artifacts",
			"defaultValue":  false,
			"required":  true,
			"visibleRule": "failTaskIfBuildsNotSuccessful = true",
			"helpMarkDown":  "Will download the build artifacts of the triggered builds (if available) and will store it on the build agent for further processing.",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "dropDirectory",
			"type":  "string",
			"label":  "Drop Directory",
			"defaultValue":  "$(agent.workFolder)",
			"required":  false,
			"visibleRule": "downloadBuildArtifacts = true",
			"helpMarkDown":  "Directory where the artifacts should be downloaded to. Variables can be used - e.g. $(agent.workFolder)",
			"groupName":  "basicConfiguration"
		},
		{
			"name": "authenticationMethod",
			"type": "pickList",
			"label": "Authentication Method",
            "required": true,
            "groupName": "authenticationOptions",
            "defaultValue": "Personal Access Token",
            "helpMarkDown": "Select your method of authentication.",
            "options": {
				"OAuth Token": "OAuth Token",
                "Personal Access Token": "Personal Access Token",
                "Basic Authentication": "Basic Authentication"
				}
		},
		{
			"name":  "username",
			"type":  "string",
			"label":  "The username that shall be used to authenticate if basic authentication is used",
			"defaultValue":  "",
			"required":  false,
			"visibleRule": "authenticationMethod = Basic Authentication",
			"groupName":  "authenticationOptions"
		},
		{
			"name":  "password",
			"type":  "string",
			"label":  "The password, Personal Access Token or OAuth Token to authenticate",
			"defaultValue":  "",
			"required":  false,
			"helpMarkDown": "If OAuth Authentication is used, leaving this empty will try to use the System.AccessToken - make sure to enable this build to allow scripts to access the token in the options!",
			"visibleRule": "authenticationMethod != Default Credentials",
			"groupName":  "authenticationOptions"
		},
		{
			"name":  "storeEnvironmentVariableName",
			"type":  "string",
			"label":  "Variable name for storing the triggered build id's",
			"defaultValue":  "TriggeredBuildIds",
			"required":  true,
			"helpMarkDown":  "A name for variable to retreive triggered builds. In case of multiple triggered builds, the values will be separated by ','",
			"groupName":  "advancedConfiguration"
		}
	],	
    "execution": {
        "Node": {
            "target": "index.js",
			"argumentFormat":  "",
			"workingDirectory":  "$(currentDirectory)"
        }
    }
}